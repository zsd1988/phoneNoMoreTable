<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd


        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd






        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- task任务扫描注解 -->
	<task:annotation-driven/>

	<!-- 扫描注解配置文件spring mvc -->
	<context:component-scan base-package="com.qingpu.phone.*"></context:component-scan>

	<!-- 导入外部配置文件配置数据库 -->
	<context:property-placeholder
			location="classpath:/config/jdbc.properties"
			ignore-unresolvable="true" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${mysqlbase.url}" />
		<property name="username" value="${mysqlbase.user}" />
		<property name="password" value="${mysqlbase.password}" />
		<property name="driverClassName" value="${driver}" />
		<property name="filters" value="config" />
		<property name="maxActive" value="${maxActive}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
		<property name="connectionProperties" value="config.decrypt=true" />
	</bean>

	<!-- 使用注解的方式来创建数据表,如果使用LocalSessionFactoryBean表示使用bean类+xml配置的方式 -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="dataSource.dialect">dialect.CustomMysqlDialect</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			</props>
		</property>
		<!-- ORM实体包扫描，自动在数据库中创建数据表 -->
		<property name="packagesToScan">
			<list>
				<value>com.qingpu.phone.*</value>
			</list>
		</property>
	</bean>

	<bean id="txManager"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="com.qingpu.phone.common.utils.RemoteCallException"/><!-- 如果存在一个事务，则支持当前事务。如果没有事务则开启 -->
			<tx:method name="add*" propagation="REQUIRED" rollback-for="com.qingpu.phone.common.utils.RemoteCallException"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="com.qingpu.phone.common.utils.RemoteCallException"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="com.qingpu.phone.common.utils.RemoteCallException"/>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 注册异常处理器 -->
	<bean id="handlerExceptionResolver" class="com.qingpu.phone.common.service.MyHandlerExceptionResolver"></bean>

	<!-- 导入外部配置文件 -->

</beans>	